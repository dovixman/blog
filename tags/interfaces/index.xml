<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>interfaces - Tag - Dovixmans Blog</title><link>http://dovixman.github.io/blog/tags/interfaces/</link><description>interfaces - Tag - Dovixmans Blog</description><generator>Hugo -- gohugo.io</generator><language>en</language><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Mon, 25 Mar 2019 00:00:00 +0000</lastBuildDate><atom:link href="http://dovixman.github.io/blog/tags/interfaces/" rel="self" type="application/rss+xml"/><item><title>Java 8: Novedades en interfaces</title><link>http://dovixman.github.io/blog/novedades-en-interfaces-java-8/</link><pubDate>Mon, 25 Mar 2019 00:00:00 +0000</pubDate><author>David</author><guid>http://dovixman.github.io/blog/novedades-en-interfaces-java-8/</guid><description>Hasta Java 8, las interfaces únicamente podían implementar métodos públicos y abstractos por defecto.
En la versión de Java 8 esto ha cambiado, se ha extendido la funcionalidad de las interfaces, de modo que puedan albergar métodos estáticos y métodos default que nos permiten definir lógica de negocio dentro de las propias interfaces.
Métodos default El objetivo que se persigue con este tipo de funcionalidad es dar a las interfaces la capacidad de definir un comportamiento estándar para toda clase que las implemente, pudiendo especializar cualquiera de los métodos definidos sobreescribiéndolos en la propia implementación de la clase.</description></item></channel></rss>